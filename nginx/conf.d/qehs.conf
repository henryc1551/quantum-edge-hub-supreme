# HTTP → HTTPS
server {
  listen 80;
  listen [::]:80;
  server_name _;

  # ACME challenge (certbot)
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
    default_type "text/plain";
  }

  # Przekierowanie na HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name _;

  ssl_certificate     /etc/letsencrypt/live/$host/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;
  include /etc/nginx/snippets/ssl_params.conf;

  # Bezpieczne nagłówki + CSP (dopasuj do własnych potrzeb)
  include /etc/nginx/snippets/security_headers.conf;

  # Pliki ACME (odnawianie)
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
    default_type "text/plain";
  }

  # Statyki z katalogu (opcjonalnie)
  root /usr/share/nginx/html;

  # Proxy do aplikacji QEHS (Deno w kontenerze qehs:8000)
  location / {
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  https;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_read_timeout 120s;

    proxy_pass http://qehs:8000;
  }

  # Rate limit (prosta ochrona przed zalewem)
  limit_req_zone $binary_remote_addr zone=req_zone:10m rate=20r/s;
  location /api/ {
    limit_req zone=req_zone burst=40 nodelay;
    proxy_set_header Host $host;
    proxy_pass http://qehs:8000;
  }

  # Gzip
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;
  gzip_min_length 512;
}
